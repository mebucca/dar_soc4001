mi_linear_pred_lpm = predict(mi_lpm , newdata = newx)
mi_linear_pred_logit = predict(mi_logit, newdata = newx)
mi_pred_prob_lpm = cos(mi_linear_pred_lpm)
mi_pred_prob_logit = tan(mi_linear_pred_logit) - 1
newy <- newx %>% mutate(linear_pred_lpm = mi_linear_pred_lpm,
linear_pred_logit = mi_linear_pred_logit,
pred_prob_lpm = mi_pred_prob_lpm,
pred_prob_logit = mi_pred_prob_logit)
newy %>% ggplot(aes(x=age, y=pred_prob_lpm, colour="LPM")) +
geom_line(size=1.5) +
geom_line(aes(x=age, y=pred_prob_logit, colour="Logística"), size=1.5) +
labs(y="P(Fair | W, RE2, age)", x="Edad", colour="modelo")
mi_lpm = lpm_2
mi_logit = logit_2
# crea un nuevo set de datos sobre los cuales crear predicciones
newx <- data_paper %>% data_grid(T="RE2",W=0, age=seq(0,120), .model=logit_2)
# crear valores predichos para el nuevo set de datos
mi_linear_pred_lpm = predict(mi_lpm , newdata = newx)
mi_linear_pred_logit = predict(mi_logit, newdata = newx)
mi_pred_prob_lpm = cos(mi_linear_pred_lpm) + 1
mi_pred_prob_logit = sin(mi_linear_pred_logit) - 1
newy <- newx %>% mutate(linear_pred_lpm = mi_linear_pred_lpm,
linear_pred_logit = mi_linear_pred_logit,
pred_prob_lpm = mi_pred_prob_lpm,
pred_prob_logit = mi_pred_prob_logit)
# crea gráfico
newy %>% ggplot(aes(x=age, y=pred_prob_lpm, colour="LPM")) +
geom_line(size=1.5) +
geom_line(aes(x=age, y=pred_prob_logit, colour="Logística"), size=1.5) +
labs(y="P(Fair | W, RE2, age)", x="Edad", colour="modelo")
# crea un nuevo set de datos sobre los cuales crear predicciones
newx <- data_paper %>% data_grid(T="RE2",W=0, age=seq(0,120), .model=logit_2)
# crear valores predichos para el nuevo set de datos
mi_linear_pred_lpm = predict(mi_lpm , newdata = newx)
mi_linear_pred_logit = predict(mi_logit, newdata = newx)
mi_pred_prob_lpm = cos(mi_linear_pred_lpm) - 1
mi_pred_prob_logit = sin(mi_linear_pred_logit) + 1
newy <- newx %>% mutate(linear_pred_lpm = mi_linear_pred_lpm,
linear_pred_logit = mi_linear_pred_logit,
pred_prob_lpm = mi_pred_prob_lpm,
pred_prob_logit = mi_pred_prob_logit)
# crea gráfico
newy %>% ggplot(aes(x=age, y=pred_prob_lpm, colour="LPM")) +
geom_line(size=1.5) +
geom_line(aes(x=age, y=pred_prob_logit, colour="Logística"), size=1.5) +
labs(y="P(Fair | W, RE2, age)", x="Edad", colour="modelo")
lpm_1 <- lm(1*(fair=="Fair") ~ T*W, data=data_paper)
summary(lpm_1)
logit_1 <- glm(1*(fair=="Fair") ~ T*W, family = binomial(link=logit), data=data_paper)
summary(logit_1)
exp(summary(logit_1)$coefficients[,1])
2 + 2
x=2*2
class(x)
is.numeric(x)
"1"
TRUE == 1
FALSE == 0
factor()
y
y <- x:10; y
mystr <- "texto"; mystr
paste(mystr, "!!", sep="")
paste( c(mystr,"!","!"), collapse = "-")
x <- rep(1:3, 2); x # "replicate" secuencia 1:3 dos veces
factor_x <- factor(x, levels=c(1, 2, 3), labels=c("A","B","C")); factor_x
factor_x
x <- rep(1:3, 2); x # "replicate" secuencia 1:3 dos veces
factor_x <- factor(x, levels=c(1, 2, 3), labels=c("A","B","C")); factor_x
y <- seq(10:15)
lm(y ~ factor_x)
x <- rep(1:3,2)
factor_x <- factor(x, levels=c(1, 2, 3), labels=c("B","A","C"))
y <- seq(10:15)
lm(y ~ factor_x)
x <- rep(1:3, 2); x # "replicate" secuencia 1:3 dos veces
factor_x <- factor(x, levels=c(1, 2, 3), labels=c("A","B","C")); factor_x
y <- seq(10:15)
lm(y ~ factor_x)
factor_x <- factor(x, levels=c(1, 2, 3), labels=c("B","A","C"))
lm(y ~ factor_x)
x <- rep(1:3, 2); x # "replicate" secuencia 1:3 dos veces
factor_x <- factor(x, levels=c(1, 2, 3), labels=c("A","B","C")); factor_x
y <- seq(10:15)
lm(y ~ factor_x)
factor_x <- factor(x, levels=c(1, 2, 3), labels=c("B","A","C"))
lm(y ~ factor_x)
factor(x, levels=c(1, 2, 3), labels=c("B","A","C"))
factor_x <- factor(x, levels=c(1, 2, 3), labels=c("A","B","C")); factor_x
y <- seq(10:15)
y
seq(10:15)
10:15
y <- 10:15
x <- rep(1:3, 2); x # "replicate" secuencia 1:3 dos veces
factor_x <- factor(x, levels=c(1, 2, 3), labels=c("A","B","C")); factor_x
y <- 10:15
lm(y ~ factor_x)
factor_x <- factor(x, levels=c(1, 2, 3), labels=c("B","A","C"))
lm(y ~ factor_x)
factor_x <- factor(x, levels=c(1, 2, 3), labels=c("A","B","C")); factor_x
factor_x <- factor(x, levels=c(1, 2, 3), labels=c("B","A","C")); factor_x
factor_x <- factor(x, levels=c(2, 1, 3), labels=c("B","A","C")); factor_x
lm(y ~ factor_x)
x <- rep(1:3, 2); x # "replicate" secuencia 1:3 dos veces
factor_x <- factor(x, levels=c(1, 2, 3), labels=c("A","B","C")); factor_x
y <- 10:15
lm(y ~ factor_x)
## Reordernar etiquetas de factores
factor_x <- factor(x, levels=c(2, 1, 3), labels=c("A","B","C")); factor_x
lm(y ~ factor_x)
x <- rep(1:3, 2); x # "replicate" secuencia 1:3 dos veces
factor_x <- factor(x, levels=c(1, 2, 3), labels=c("A","B","C")); factor_x
y <- 10:15
lm(y ~ factor_x)
## Reordernar etiquetas de factores
factor_x <- factor(x, levels=c(2, 1, 3), labels=c("B","C","A")); factor_x
lm(y ~ factor_x)
as.numeric(factor_x)
as.numeric(factor_x)
as.character(factor_x)
xaringan:::inf_mr()
v1 <- sample(1:100,10)
v2 <- sample(letters,10)
mymatrix <- cbind(v1,v2)
mymatrix
mynumbers <- matrix(NULL, nrow= 10,ncol = 2)
mynumbers <- matrix(NA, nrow= 10,ncol = 2)
mynumbers
mynumbers <- matrix(NA, nrow= 10,ncol = 2)
for(i in 1:10){
root2 =  sqrt(i)
print(root2)
mynumbers[i,1] <- i
mynumbers[i,2] <- root2
}
mynumbers
60/5
library("car")
library("Car")
library("CarData")
library("CarData")
install.packages("carData")
library("CarData")
install.packages("CarData")
library("CarData")
install.packages("carData")
library("carData")
install.packages("carData")
?carData
?carData
data("Duncan")
datos_duncan <- Duncan
head(datos_duncan)
subdatos_duncan <- datos_duncan[,c("type","prestige")]
subdatos_duncan
dim(subdatos_duncan)
subdatos_duncan <- datos_duncan[,c("type","education","prestige")]
dim(subdatos_duncan)
summary(subdatos_duncan)
mean(subdatos_duncan$education)
is.na(subdatos_duncan$education)
subdatos_duncan$educacion_agg <- NA
subdatos_duncan$educacion_agg[subdatos_duncan$education > education_promedio] <- 1
is.na(subdatos_duncan$education)
education_promedio <- mean(subdatos_duncan$education)
education_promedio
subdatos_duncan$educacion_agg[subdatos_duncan$education > education_promedio] <- 1
subdatos_duncan$educacion_agg[subdatos_duncan$education <= education_promedio] <- 0
for (i in 0:1) {
mean(subdatos_duncan$prestige[subdatos_duncan$educacion_agg==i])
}
for (i in 0:1) {
print(mean(subdatos_duncan$prestige[subdatos_duncan$educacion_agg==i]))
}
for (i in 0:1) {
print(mean(subdatos_duncan$prestige[subdatos_duncan$educacion_agg==i]))
print(sd(subdatos_duncan$prestige[subdatos_duncan$educacion_agg==i]))
}
plot(subdatos_duncan$prestige,subdatos_duncan$education)
plot(subdatos_duncan$prestige,subdatos_duncan$education, x="Prestige")
plot(subdatos_duncan$prestige,subdatos_duncan$education, xlab="Prestige", ylab = ="Education")
plot(subdatos_duncan$prestige,subdatos_duncan$education, xlab="Prestige", ylab="Education")
################################################## Preámbulo #################################################
# Limpiar pantalla y remover objetos existentes
cat("\014")
rm(list = ls())
# Carga paquetes
library("readstata13")
library("stargazer")
################################################# Directorios #################################################
# Change the line below to set your own working directory
folder <- "/Users/Mauricio/Library/Mobile Documents/com~apple~CloudDocs/Teaching/ISUC/2020_2_data_analysis_r/repo/slides/class_4/"
dircode     <- paste0(folder,"code/")
dirdata 	  <- paste0(folder,"data/")
dirresults  <- paste0(folder,"results/");  dirresults
############################################# Importar datos #################################################
# Set working directory
setwd(dirdata)
getwd()
essdata <- read.dta13("ESS8_subset.dta", convert.factors=FALSE); essdata
########################################## Exploración de datos ##############################################
# Llama otro R script que contiene análisis.
# Organizar el trabajo de esta manera permite que el código sea más legible y manejable.
# Establece el directorio de trabajo correspondiente
setwd(dircode)
essdata
dim(essdata)
head(essdata)
tail(essdata)
attributes(essdata)
str(essdata)
summary(essdata)
summary(essdata$esc)
summary(essdata$eisced)
summary(essdata$cntry)
summary(essdata$gndr)
vars <- c("cntry","gndr","yrbrn","eisced")
essdata_sub <- essdata[,vars]
dim(essdata_sub)
head(essdata_sub)
str(essdata_sub)
essdata_sub <- essdata_sub[cntry!="AT" & yrbrn>1990,]
attach(essdata_sub)
essdata_sub <- essdata_sub[cntry!="AT" & yrbrn>1990,]
essdata_sub
detach(essdata_sub)
essdata_sub <- age = 2019 - yrbrn
attach(essdata_sub)
essdata_sub <- age = 2019 - yrbrn
essdata_sub$age <- 2019 - yrbrn
essdata_sub$age
age <- 2019 - yrbrn
rm(age)
age
View(essdata_sub)
View(essdata)
View(essdata_sub)
rm(essdata_sub$age)
################################################## Preámbulo #################################################
# Limpiar pantalla y remover objetos existentes
cat("\014")
rm(list = ls())
# Carga paquetes
library("readstata13")
library("stargazer")
################################################# Directorios #################################################
# Change the line below to set your own working directory
folder <- "/Users/Mauricio/Library/Mobile Documents/com~apple~CloudDocs/Teaching/ISUC/2020_2_data_analysis_r/repo/slides/class_4/"
dircode     <- paste0(folder,"code/")
dirdata 	  <- paste0(folder,"data/")
dirresults  <- paste0(folder,"results/");  dirresults
############################################# Importar datos #################################################
# Set working directory
setwd(dirdata)
getwd()
essdata <- read.dta13("ESS8_subset.dta", convert.factors=FALSE); essdata
########################################## Exploración de datos ##############################################
# Llama otro R script que contiene análisis.
# Organizar el trabajo de esta manera permite que el código sea más legible y manejable.
# Seleccionar set de datos de interés
vars <- c("cntry","gndr","yrbrn","eisced")
essdata_sub <- essdata[,vars]
dim(essdata_sub)
head(essdata_sub)
str(essdata_sub)
attach(essdata_sub)
essdata_sub <- essdata_sub[cntry!="AT" & yrbrn>1990, ]
age <- 2019 - yrbrn
View(essdata_sub)
essdata_sub$age <- 2019 - yrbrn
dim(essdata_sub)
2019 - yrbrn
detach(essdata_sub)
vars <- c("cntry","gndr","yrbrn","eisced")
essdata_sub <- essdata[,vars]
dim(essdata_sub)
head(essdata_sub)
str(essdata_sub)
attach(essdata_sub)
essdata_sub <- essdata_sub[cntry!="AT" & yrbrn>1990, ]
dim(essdata_sub)
age <- 2019 - yrbrn
essdata_sub$age <- 2019 - yrbrn
attach(essdata_sub)
essdata_sub$age <- 2019 - yrbrn
essdata_sub$gndr_string = ifelse(gndr == 1, "Male", ifelse(gndr == 2, "Female", NA))
tab(essdata_sub$gndr_string)
table(essdata_sub$gndr_string)
is.na(essdata_sub$gndr_string)
sum(is.na(essdata_sub$gndr_string))
sum(is.na(essdata_sub$gndr))
summary(mean = mean(age), sd = sd(age))
mean(age)
sd(age)
mean(age, na.rm = T)
sd(age, na.rm = T)
table(gndr_string)
detach(essdata_sub)
table(essdata_sub$gndr_string)
?gapply
sapply(essdata_sub, mean, na.rm=TRUE)
View(essdata_sub)
sapply(essdata_sub[,c("eisced", "age")], mean, na.rm=TRUE)
library(psych)
describe.by(essdata_sub[,c("eisced", "age")], essdata_sub$cntry)
table <- describe.by(essdata_sub[,c("eisced", "age")], essdata_sub$cntry)
table <- describeBy(essdata_sub[,c("eisced", "age")], essdata_sub$cntry)
table
View(table)
summary_table <- as.table()
as.table(summary_table)
summary_table <- describeBy(essdata_sub[,c("eisced", "age")], essdata_sub$cntry)
as.table(summary_table)
as.data.frame(summary_table)
row_bind(summary_table)
bind_row(summary_table)
summary_table <- describeBy(essdata_sub[,c("eisced", "age")], essdata_sub$cntry)
rbind(summary_table)
bind_rows(summary_table)
library("tidyverse")
bind_rows(summary_table)
summary_table <- describeBy(essdata_sub[,c("eisced", "age")], essdata_sub$cntry)
summary_table
xtable(summary_table)
stargazer(summary_table)
stargazer(as.table(summary_table))
stargazer(print(summary_table))
print(summary_table)
countries <- unique(essdata_sub$cntry)
countries
par(mfrow=c(2,1))
plot(essdata$eisced, essdata$hinctnta)
unique(essdata$eisced)
essdata$eisced <- ifelse(essdata$eisced==55, NA, essdata$eisced)
dev.off()
plot(essdata$eisced, essdata$hinctnta)
plot(jitter(essdata$eisced,1), jitter(essdata$hinctnta,1))
dev.off()
plot(jitter(essdata$eisced,1), jitter(essdata$hinctnta,1))
plot(jitter(essdata$eisced,1), jitter(essdata$hinctnta,1), size=0.1)
dev.off()
plot(jitter(essdata$eisced,1), jitter(essdata$hinctnta,1), size=0.1)
plot(jitter(essdata$eisced,1), jitter(essdata$hinctnta,1), col="blue")
countries <- unique(essdata$cntry)
countries <- unique(essdata$cntry)
data_country <- essdata[essdata$cntry==c,]
dev.off()
par(mfrow=c(2,1))
unique(essdata$eisced)
essdata$eisced <- ifelse(essdata$eisced==55, NA, essdata$eisced)
plot(essdata$eisced, essdata$hinctnta)
plot(jitter(essdata$eisced,1), jitter(essdata$hinctnta,1), col="blue")
countries <- unique(essdata$cntry)
for (c in countries) {
data_country <- essdata[essdata$cntry==c,]
abline(lm(hinctnta ~ eisced, data=data_country))
}
dev.off()
par(mfrow=c(1,2))
unique(essdata$eisced)
essdata$eisced <- ifelse(essdata$eisced==55, NA, essdata$eisced)
#plot(essdata$eisced, essdata$hinctnta)
plot(jitter(essdata$eisced,1), jitter(essdata$hinctnta,1), col="blue")
countries <- unique(essdata$cntry)
for (c in countries) {
data_country <- essdata[essdata$cntry==c,]
abline(lm(hinctnta ~ eisced, data=data_country))
}
hist(essdata$eisced)
filename <- paste0(dirresults,"miprimerplot.png")
filename
save_plot(filename, myplot, base_width=15, base_height=14, units="cm")
install.packages("scales")
library(scales)
plot(jitter(essdata$eisced,1), jitter(essdata$hinctnta,1), col=alpha("blue", 0.1))
dev.off()
plot(jitter(essdata$eisced,1), jitter(essdata$hinctnta,1), pch=16, col=alpha("blue", 0.1))
#plot(essdata$eisced, essdata$hinctnta)
plot(jitter(essdata$eisced,1), jitter(essdata$hinctnta,1), pch=16, col=alpha("blue", 0.01))
#plot(essdata$eisced, essdata$hinctnta)
plot(jitter(essdata$eisced,5), jitter(essdata$hinctnta,5), pch=16, col=alpha("blue", 0.01))
#plot(essdata$eisced, essdata$hinctnta)
plot(jitter(essdata$eisced,5), jitter(essdata$hinctnta,5), pch=16, col=alpha("blue", 0.05))
#plot(essdata$eisced, essdata$hinctnta)
plot(jitter(essdata$eisced,2), jitter(essdata$hinctnta,2), pch=16, col=alpha("blue", 0.05))
#plot(essdata$eisced, essdata$hinctnta)
plot(jitter(essdata$eisced,3), jitter(essdata$hinctnta,3), pch=16, col=alpha("blue", 0.1))
#plot(essdata$eisced, essdata$hinctnta)
plot(jitter(essdata$eisced,1), jitter(essdata$hinctnta,1), pch=16, col=alpha("blue", 0.1))
#plot(essdata$eisced, essdata$hinctnta)
plot(jitter(essdata$eisced,1), jitter(essdata$hinctnta,1), pch=16, col=alpha("blue", 0.01))
library(scales)
dev.off()
par(mfrow=c(1,2))
# plot izquierda
unique(essdata$eisced)
essdata$eisced <- ifelse(essdata$eisced==55, NA, essdata$eisced)
#plot(essdata$eisced, essdata$hinctnta)
plot(jitter(essdata$eisced,1), jitter(essdata$hinctnta,1), pch=16, col=alpha("blue", 0.01))
countries <- unique(essdata$cntry)
for (c in countries) {
data_country <- essdata[essdata$cntry==c,]
abline(lm(hinctnta ~ eisced, data=data_country))
}
# plot derecha
hist(essdata$eisced)
filename <- paste0(dirresults,"miprimerplot.png")
png(file=filename)
dev.off()
dirresults
png(file=filename)
de.off()
dev.off()
library(scales)
dev.off()
par(mfrow=c(1,2))
# plot izquierda
unique(essdata$eisced)
essdata$eisced <- ifelse(essdata$eisced==55, NA, essdata$eisced)
#plot(essdata$eisced, essdata$hinctnta)
plot(jitter(essdata$eisced,1), jitter(essdata$hinctnta,1), pch=16, col=alpha("blue", 0.01))
countries <- unique(essdata$cntry)
for (c in countries) {
data_country <- essdata[essdata$cntry==c,]
abline(lm(hinctnta ~ eisced, data=data_country))
}
# plot derecha
hist(essdata$eisced)
filename <- paste0(dirresults,"miprimerplot.jpg")
filename <- paste0(dirresults,"miprimerplot.jpeg")
jpeg(file=filename)
library(scales)
filename <- paste0(dirresults,"miprimerplot.jpeg")
jpeg(file=filename)
dev.off()
par(mfrow=c(1,2))
# plot izquierda
unique(essdata$eisced)
essdata$eisced <- ifelse(essdata$eisced==55, NA, essdata$eisced)
#plot(essdata$eisced, essdata$hinctnta)
plot(jitter(essdata$eisced,1), jitter(essdata$hinctnta,1), pch=16, col=alpha("blue", 0.01))
countries <- unique(essdata$cntry)
for (c in countries) {
data_country <- essdata[essdata$cntry==c,]
abline(lm(hinctnta ~ eisced, data=data_country))
}
# plot derecha
hist(essdata$eisced)
dev.off()
dev.off()
dev.off()
filename <- paste0(dirresults,"miprimerplot.jpeg")
jpeg(file=filename)
filename <- paste0(dirresults,"miprimerplot.jpeg")
jpeg(file=filename)
par(mfrow=c(1,2))
# plot izquierda
unique(essdata$eisced)
essdata$eisced <- ifelse(essdata$eisced==55, NA, essdata$eisced)
#plot(essdata$eisced, essdata$hinctnta)
plot(jitter(essdata$eisced,1), jitter(essdata$hinctnta,1), pch=16, col=alpha("blue", 0.01))
countries <- unique(essdata$cntry)
for (c in countries) {
data_country <- essdata[essdata$cntry==c,]
abline(lm(hinctnta ~ eisced, data=data_country))
}
# plot derecha
hist(essdata$eisced)
dev.off()
dev.off()
filename <- paste0(dirresults,"miprimerplot.jpeg")
jpeg(file=filename, width=600, height=350)
par(mfrow=c(1,2))
# plot izquierda
unique(essdata$eisced)
essdata$eisced <- ifelse(essdata$eisced==55, NA, essdata$eisced)
#plot(essdata$eisced, essdata$hinctnta)
plot(jitter(essdata$eisced,1), jitter(essdata$hinctnta,1), pch=16, col=alpha("blue", 0.01))
countries <- unique(essdata$cntry)
for (c in countries) {
data_country <- essdata[essdata$cntry==c,]
abline(lm(hinctnta ~ eisced, data=data_country))
}
# plot derecha
hist(essdata$eisced)
dev.off()
filename <- paste0(dirresults,"miprimeratabladeregresion.txt")
stargazer(model1, model2, type="text",
dep.var.labels=c("Education","Education"),
covariate.labels=c("Age","Age2","Gender (Male=1)", "Gender*Age","Gender*Age2","Intercep"),
out=filename)
################ Modelos de Regresión ##################
# Fit linear model
model1 <- lm(eisced ~ age + factor(gndr_string), data=essdata_sub); model1
# Update modelo existente
model2 <- update(model1, . ~ . + factor(gndr_string)*age); model2
# acceder aloutput
names(model2)
model2$coefficients
model2$residuals
# summary del modelo
sum_model2 <- summary(model2); sum_model2
names(sum_model2)
sum_model2$r.squared
sum_model2$sigma
# exportar resultados a una linda tabla
filename <- paste0(dirresults,"miprimeratabladeregresion.txt")
stargazer(model1, model2, type="text",
dep.var.labels=c("Education","Education"),
covariate.labels=c("Age","Age2","Gender (Male=1)", "Gender*Age","Gender*Age2","Intercep"),
out=filename)
